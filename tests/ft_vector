Testing with ft
>>> Container: vector <<<
>> vector: constructors
> default
size:     0
capacity: 0
max_size: 2305843009213693951
size:     0
capacity: 0
max_size: 2305843009213693951
-------------------
> fill
size:     3
capacity: 3
max_size: 2305843009213693951
size:     7
capacity: 7
max_size: 2305843009213693951
-------------------
> range
size:     5
capacity: 5
max_size: 2305843009213693951
lollollollollollollolsize:     4
capacity: 4
max_size: 2305843009213693951
lolsize:     1
capacity: 1
max_size: 2305843009213693951
-------------------
> copy
size:     5
capacity: 5
max_size: 2305843009213693951
size:     5
capacity: 5
max_size: 2305843009213693951
-------------------
> operator=
lollollollollollollollollollolsize:     5
capacity: 5
max_size: 2305843009213693951
size:     5
capacity: 5
max_size: 2305843009213693951
size:     5
capacity: 5
max_size: 2305843009213693951
-------------------
>> vector: iterators
lollollollollol> iterator
0
1
2
3
4
--------
> const_iterator
0
1
2
3
4
--------
> reverse_iterator
4
3
2
1
0
--------
> const_reverse_iterator
4
3
2
1
0
begin:    0
end - 1:  4
rbegin:   4
rend - 1: 0
-------------------
>> vector: capacity
empty: 1
size:     0
capacity: 0
max_size: 2305843009213693951
> Pushed back 1 element
lolsize:     1
capacity: 1
max_size: 2305843009213693951
- 1
> Resized to 5
size:     5
capacity: 5
max_size: 2305843009213693951
- 1
- 42
- 42
- 42
- 42
> Resized to 3
size:     3
capacity: 5
max_size: 2305843009213693951
- 1
- 42
- 42
empty: 0
> Reserved a size of 20
size:     3
capacity: 20
max_size: 2305843009213693951
- 1
- 42
- 42
OK: caught length_error exception
-------------------
>> vector: element access
> operator[]
v contains: 9 8 7 6 5 4 3 2 1 0
-------------------
> at
v contains: 0 1 2 3 4 5 6 7 8 9
OK: caught out_of_range exception
-------------------
> front
lollollolv.front() is now 62
-------------------
> back
lollollollollollollollollollollollollollollollollollollollollollollollollollolv contains: 10 9 8 7 6 5 4 3 2 1 0
-------------------
>> vector: modifiers
> assign
Size of first: 7
Size of second: 5
Size of third: 3
-------------------
> push_back
v stores 42000000 numbers.
-------------------
> pop_back
The elements of v add up to 600
-------------------
> insert
v contains: 501 502 503 300 300 400 400 200 100 100 100
-------------------
> erase
v contains: 4 5 7 8 9 10
-------------------
> swap
foo contains: 200 200 200 200 200
bar contains: 100 100 100
-------------------
> clear
v contains: 100 200 300
v contains: 1101 2202
-------------------
> allocator
The allocated array contains: 0 1 2 3 4
-------------------
> vector: operators
> [0]
eq: 1 | ne: 0
lt: 0 | le: 1
gt: 0 | ge: 1
> [1]
eq: 1 | ne: 0
lt: 0 | le: 1
gt: 0 | ge: 1
> [2]
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
> [3]
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1
> [4]
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1
> [5]
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
> [6]
eq: 0 | ne: 1
lt: 1 | le: 1
gt: 0 | ge: 0
> [7]
eq: 0 | ne: 1
lt: 0 | le: 0
gt: 1 | ge: 1
